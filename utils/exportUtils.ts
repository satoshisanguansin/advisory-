import type { IntelligenceBriefingReport, PolicyCredibilityScore, EnhancedStakeholder, InternalStrategy, DraftComparisonReport, IntelReport, MethodologyReport, UserContribution, WebSource, ForensicBudgetAnalysisReport, RiskImpactAnalysis, AntiMonopolyAnalysis, EnhancedPartyDraftComparison, SubstrateArgumentGraph, SocialMediaSentiment } from '../types';

// --- TRANSLATION MAPS ---
const audienceMap: { [key: string]: string } = {
    'Press': '‡∏™‡∏∑‡πà‡∏≠‡∏°‡∏ß‡∏•‡∏ä‡∏ô',
    'Parliament Floor': '‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤',
    'Community Organizers': '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô',
    'Social Media Influencers': '‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏•‡∏ö‡∏ô‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢'
};

// --- MODULAR MARKDOWN GENERATORS ---

export const generateMarkdownForCredibilityScore = (score: PolicyCredibilityScore): string => {
    let md = `## ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢: ${score.overallScore}/100\n\n`;
    score.components.forEach(c => {
        md += `* **${c.name}:** ${c.score}/100\n  *‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${c.rationale}*\n`;
    });
    return md;
};

export const generateMarkdownForInternalStrategy = (strategy: InternalStrategy): string => {
    let md = '## ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢\n\n';

    md += '### ‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå\n';
    strategy.strategicNarrativeAngles.forEach(angle => {
        md += `* **‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á:** ${angle.angle}\n  *‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${angle.rationale}*\n`;
    });
    md += '\n';

    md += '### ‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n';
    strategy.talkingPoints.forEach(tp => {
        md += `#### ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${audienceMap[tp.audience as keyof typeof audienceMap] || tp.audience}\n`;
        tp.points.forEach(p => {
            md += `* **‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô:** ${p.point}\n  *‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${p.rationale}*\n`;
        });
        md += '\n';
    });

    md += '### ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á\n';
    strategy.rebuttals.forEach(r => {
        md += `* **‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡∏≤‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤:** "${r.opposingArgument}"\n* **‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤:** "${r.suggestedRebuttal}"\n\n`;
    });
    return md;
};

export const generateMarkdownForStakeholders = (stakeholders: EnhancedStakeholder[]): string => {
    let md = '## ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏î‡πâ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏™‡∏µ‡∏¢\n\n';
    stakeholders.forEach(s => {
        md += `### ${s.name} (${s.category})\n`;
        md += `* **‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô:** ${s.stance}\n`;
        md += `* **‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏•:** ${s.influenceLevel}\n`;
        md += `* **‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ:** ${s.summary}\n`;
        if (s.politicalConnections && s.politicalConnections.length > 0) {
            md += `* **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á:**\n`;
            s.politicalConnections.forEach(pc => {
                md += `  - ${pc.person}: ${pc.connection} (‡∏ó‡∏µ‡πà‡∏°‡∏≤: ${pc.source})\n`;
            });
        }
        md += '\n';
    });
    return md;
}

export const generateMarkdownForAntiMonopolyAnalysis = (analysis: AntiMonopolyAnalysis): string => {
    let md = `## ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ï‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏Ç‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏à‡∏£‡∏¥‡∏ï\n\n`;
    md += `### ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏á\n`;
    analysis.shameReport.forEach(item => {
        md += `> ${item}\n\n`;
    });

    md += `### ‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô\n`;
    analysis.conflictsOfInterest.forEach(item => {
        md += `* **‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•:** ${item.person} (${item.role})\n`;
        md += `* **‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÉ‡∏´‡πâ:** ${item.beneficiaryCompany}\n`;
        md += `* **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå:** ${item.relationshipToBeneficiary}\n`;
        md += `* **‡∏ö‡∏ó‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:** ${item.analysisOfConflict}\n\n`;
    });

    md += `### ‡∏Å‡∏•‡πÑ‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏Ç‡∏≤‡∏î\n`;
    md += `**‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ï‡∏•‡∏≤‡∏î:**\n`;
    analysis.barriersToEntry.forEach(item => {
        md += `- **‡∏Ç‡πâ‡∏≠‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢ \`${item.clause}\`**: ${item.analysis}\n`;
    });
    md += `\n**‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏ß‡∏á‡∏´‡∏≤‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:**\n`;
    analysis.exploitationTactics.forEach(item => {
        md += `- ${item}\n`;
    });
    md += '\n';

    return md;
}


export const generateMarkdownForDraftComparison = (report: DraftComparisonReport): string => {
    let md = `# ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡πà‡∏≤‡∏á: ${report.title}\n\n`;
    md += `## ‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£\n${report.executiveSummary}\n\n`;

    report.comparison.forEach(point => {
        md += `---\n\n## ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô: ${point.theme}\n\n`;
        md += `### ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå\n`;
        md += `| ‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏° | ‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô‡∏û‡∏£‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô | ‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° |\n`;
        md += `|---|---|---|\n`;
        md += `| **‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô** | ${point.peoplesPartyPosition.replace(/\n/g, '<br/>')} | ${point.opponentPosition.replace(/\n/g, '<br/>')} |\n`;
        md += `| **‡∏Ç‡πâ‡∏≠‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç** | ${point.keyDifference.replace(/\n/g, '<br/>')} | - |\n\n`;
        
        md += `### üèÜ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå\n`;
        md += `> ${point.strategicAdvantage}\n\n`;

        md += `### ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏£‡∏≤\n`;
        const ppClause = point.clauseComparison.find(c => c.draftIdentifier === "‡∏£‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô")?.clauseText || 'N/A';
        const oppClause = point.clauseComparison.find(c => c.draftIdentifier === "‡∏£‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°")?.clauseText || 'N/A';
        
        md += `**‡∏£‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:**\n\`\`\`\n${ppClause}\n\`\`\`\n\n`;
        md += `**‡∏£‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°:**\n\`\`\`\n${oppClause}\n\`\`\`\n\n`;
    });

    return md;
};

export const generateMarkdownForMethodology = (methodology: MethodologyReport): string => {
    let md = `## ‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡∏≠‡∏á AI\n\n`;
    md += `### ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô: ${methodology.confidenceLevel.score}/100\n*${methodology.confidenceLevel.rationale}*\n\n`;

    md += `### ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å\n`;
    methodology.informationSources.forEach(s => {
        md += `* **${s.sourceType}:** ${s.weightingRationale}\n`;
    });
    md += `\n`;

    md += `### ‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ\n`;
    methodology.analyticalFrameworks.forEach(f => {
        md += `* ${f}\n`;
    });
    md += `\n`;

    md += `### ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•\n`;
    methodology.reasoningProcess.forEach((step, i) => {
        md += `${i + 1}. ${step}\n`;
    });
    md += `\n`;

    md += `### ‡∏≠‡∏Ñ‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö\n`;
    methodology.potentialBiases.forEach(b => {
        md += `* **${b.biasType}:** ${b.mitigation}\n`;
    });

    return md;
};

export const generateMarkdownForIntelReport = (report: IntelReport): string => {
    let md = `# ‡πÅ‡∏ü‡πâ‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏ã‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${report.profile.name}\n\n`;

    md += `## ‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£\n${report.executiveSummary}\n\n`;

    md += `## ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á\n`;
    md += `* **‡∏£‡∏∞‡∏î‡∏±‡∏ö:** ${report.riskAssessment.level}\n`;
    md += `* **‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:** ${report.riskAssessment.justification}\n\n`;

    md += '## ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•\n';
    md += `* **‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:** ${report.profile.titles.join(', ')}\n`;
    md += `* **‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô:** ${report.profile.aliases.join(', ')}\n`;
    md += `* **‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** ${report.profile.associatedCompanies.join(', ')}\n`;
    md += `* **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å:** ${report.profile.knownLocations.join('; ')}\n\n`;
    
    md += `## ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á\n`;
    if (report.riskFlags.length > 0) {
        report.riskFlags.forEach(flag => {
            md += `* ${flag}\n`;
        });
    } else {
        md += `_‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á_\n`;
    }
    md += '\n';

    md += `## ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤\n`;
    if (report.timeline.length > 0) {
        report.timeline.forEach(item => {
            md += `* **${item.date}:** ${item.event}\n`;
        });
    } else {
        md += `_‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤_\n`;
    }
    md += '\n';

    md += `## ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß\n`;
    if (report.familyDetails.length > 0) {
        report.familyDetails.forEach(item => {
            md += `* **${item.name} (${item.relation}):** ${item.details}\n`;
        });
    } else {
        md += `_‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß_\n`;
    }
    md += '\n';
    
    md += `## ‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞\n`;
    if (report.publicMentions.length > 0) {
        report.publicMentions.forEach(mention => {
            md += `* ${mention}\n`;
        });
    } else {
        md += `_‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞_\n`;
    }
    md += '\n';

    if (report.methodology) {
        md += generateMarkdownForMethodology(report.methodology) + '\n---\n\n';
    }

    if (report.sources && report.sources.length > 0) {
        md += `## ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n`;
        report.sources.forEach(s => {
            md += `* [${s.title || s.uri}](${s.uri})\n`;
        });
    }

    return md;
};

export const generateMarkdownForForensicBudgetAnalysis = (report: ForensicBudgetAnalysisReport): string => {
    let md = `# ${report.reportTitle}\n\n`;
    md += `**‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:** ${report.reportDate} | **‡∏à‡∏±‡∏î‡∏ó‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠:** ${report.preparedFor}\n\n`;

    md += `## ${report.executiveSummary.title}\n`;
    md += `* **‡∏Ç‡πâ‡∏≠‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°:** ${report.executiveSummary.overallFinding}\n`;
    md += `* **‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏õ‡∏•‡∏∑‡∏≠‡∏á:** ${report.executiveSummary.quantifiedWasteExample}\n`;
    md += `* **‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∞‡∏ö‡∏ö:** ${report.executiveSummary.systemicIssueRate}\n`;
    md += `* **‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏õ‡∏µ:** ${report.executiveSummary.potentialAnnualSavings}\n\n`;

    md += `## ${report.methodology.title}\n`;
    report.methodology.steps.forEach(step => {
        md += `1. ${step}\n`;
    });
    md += `\n---\n\n`;
    
    md += `## ${report.findingsComparisonTable.title}\n\n`;
    report.findingsComparisonTable.items.forEach(item => {
        md += `### ${item.priorityRank}. ${item.itemCategory}\n`;
        md += `| ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î | ‡∏Ñ‡πà‡∏≤ |\n`;
        md += `|---|---|\n`;
        md += `| **‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô** | ${item.standardSpecification} |\n`;
        md += `| **‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏•‡∏≤‡∏î (FMV)/‡∏´‡∏ô‡πà‡∏ß‡∏¢** | ${item.fmvBenchmarkPerUnit.toLocaleString()} ‡∏ö‡∏≤‡∏ó |\n`;
        md += `| **‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö** | ${item.highestBMAUnitPriceFound} ‡∏ö‡∏≤‡∏ó |\n`;
        md += `| **‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢/‡∏´‡∏ô‡πà‡∏ß‡∏¢** | ${item.avgOverpaymentPerUnit} ‡∏ö‡∏≤‡∏ó |\n`;
        md += `| **% ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô FMV** | ${item.avgPercentOverFMV}% |\n`;
        md += `| **‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)** | **${item.totalSampleOverpayment.toLocaleString()} ‡∏ö‡∏≤‡∏ó** |\n`;
        md += `| **‡πÄ‡∏Ç‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á** | ${item.keyDistrictsInvolved.join(', ')} |\n`;
        md += `| **‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏** | ${item.notesFromBudgetDoc} |\n`;
        md += `| **‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤** | ${item.marketReferenceSource} |\n\n`;
        md += `**‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£:**\n`;
        md += `> ${item.killerQuestion}\n\n`;
        md += `---\n\n`;
    });

    md += `## ${report.callToAction.title}\n`;
    report.callToAction.keyDemands.forEach(demand => {
        md += `* ${demand}\n`;
    });
    md += `\n**‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤:** ${report.callToAction.ourGoal}\n\n`;

    md += `## ${report.appendixMarketReferences.title}\n`;
    report.appendixMarketReferences.references.forEach(ref => {
        md += `* **${ref.item}:**\n`;
        ref.urls.forEach(url => {
            md += `  - ${url}\n`;
        });
    });
    md += `\n`;

    md += `**‡∏Ñ‡∏≥‡∏ä‡∏µ‡πâ‡πÅ‡∏à‡∏á:**\n*${report.disclaimer}*\n`;
    
    return md;
};

export const generateMarkdownForArgumentGraph = (graph: SubstrateArgumentGraph): string => {
    let md = `## ‡∏Å‡∏£‡∏≤‡∏ü‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á\n\n`;

    md += `### ‚úÖ ‡∏Ç‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô\n\n`;
    (graph.pro || []).forEach(arg => {
        md += `#### ${arg.title}\n`;
        md += `*‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠: ${arg.frame}*\n\n`;
        arg.claims.forEach(claim => {
            md += `- **‡∏Ç‡πâ‡∏≠‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏≠‡πâ‡∏≤‡∏á:** ${claim.claim}\n`;
            md += `  - **‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:** ${claim.detail}\n`;
        });
        md += `\n`;
    });

    md += `### ‚ùå ‡∏Ç‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏Ñ‡∏±‡∏î‡∏Ñ‡πâ‡∏≤‡∏ô\n\n`;
    (graph.con || []).forEach(arg => {
        md += `#### ${arg.title}\n`;
        md += `*‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠: ${arg.frame}*\n\n`;
        arg.claims.forEach(claim => {
            md += `- **‡∏Ç‡πâ‡∏≠‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏≠‡πâ‡∏≤‡∏á:** ${claim.claim}\n`;
            md += `  - **‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:** ${claim.detail}\n`;
        });
        md += `\n`;
    });
    
    return md;
};

export const generateMarkdownForPartyComparison = (comparison: EnhancedPartyDraftComparison[]): string => {
    let md = `## ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡∏£‡∏Ñ\n\n`;
    md += `| ‡∏û‡∏£‡∏£‡∏Ñ | ‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô | ‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á | ‡∏Ç‡πâ‡∏≠‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï |\n`;
    md += `|---|---|---|---|\n`;
    (comparison || []).forEach(p => {
        md += `| ${p.party} | ${p.position} | ${p.riskPositioning} | ${p.notableClause} |\n`;
    });
    return md;
};

export const generateMarkdownForSocialMediaSentiment = (sm: SocialMediaSentiment): string => {
    if (!sm) return '';
    let md = `## ‡∏†‡∏π‡∏°‡∏¥‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏Å‡∏≤‡∏£‡∏ñ‡∏Å‡πÄ‡∏ñ‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞ (‡∏ú‡πà‡∏≤‡∏ô ${sm.hashtag})\n\n`;
    md += `* **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å:** ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô ${sm.proPercent}%, ‡∏Ñ‡∏±‡∏î‡∏Ñ‡πâ‡∏≤‡∏ô ${sm.antiPercent}%, ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏≤‡∏á ${sm.neutralPercent}%\n`;
    
    if (sm.commonConcerns && sm.commonConcerns.length > 0) {
        md += `* **‡∏Ç‡πâ‡∏≠‡∏Å‡∏±‡∏á‡∏ß‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î:**\n`;
        sm.commonConcerns.forEach(c => md += `  * ${c}\n`);
    }

    if (sm.argumentClusters && sm.argumentClusters.length > 0) {
        md += `\n### ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á‡∏´‡∏•‡∏±‡∏Å\n`;
        sm.argumentClusters.forEach(cluster => {
            md += `#### ${cluster.theme}\n`;
            md += `> *${cluster.summary}*\n\n`;
            (cluster.representativeQuotes || []).forEach(quote => {
                md += `* "${quote}"\n`;
            });
            md += '\n';
        });
    }

    return md;
};

export const generateMarkdownForRiskImpactAnalysis = (analysis: RiskImpactAnalysis): string => {
    if (!analysis) return '';
    let md = `## ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö\n\n`;
    md += `### ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏™‡∏∏‡∏Ç\n${analysis.publicHealth}\n\n`;
    md += `### ‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à\n${analysis.economic}\n\n`;
    md += `### ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏≤‡∏ô‡∏â‡∏±‡∏ô‡∏ó‡πå‡∏ó‡∏≤‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏°\n${analysis.socialCohesion}\n\n`;
    return md;
};


// --- MAIN REPORT GENERATOR ---

export const generateMarkdownForIntelligenceBriefing = (report: IntelligenceBriefingReport): string => {
    let md = `# ‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏£‡∏≠‡∏á: ${report.topic}\n\n`;
    md += `## ‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£\n${report.executiveSummary}\n\n`;

    md += generateMarkdownForCredibilityScore(report.policyCredibilityScore) + '\n---\n\n';
    
    md += `## ‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏ö‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥\n`;
    md += `**‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô:** ${report.recommendedPositioning.stance}\n`;
    md += `**‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:**\n`;
    report.recommendedPositioning.justification.forEach(j => md += `* ${j}\n`);
    md += `**‡∏Å‡∏£‡∏≠‡∏ö‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÉ‡∏´‡∏°‡πà: "${report.recommendedPositioning.positioningReframe.title}"**\n`;
    md += `*‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${report.recommendedPositioning.positioningReframe.rationale}*\n\n`;
    md += '---\n\n';

    if (report.internalStrategy) md += generateMarkdownForInternalStrategy(report.internalStrategy) + '\n---\n\n';
    if (report.stakeholderAnalysis) md += generateMarkdownForStakeholders(report.stakeholderAnalysis) + '\n---\n\n';
    if (report.antiMonopolyAnalysis) md += generateMarkdownForAntiMonopolyAnalysis(report.antiMonopolyAnalysis) + '\n---\n\n';

    if (report.partyDraftComparison && report.partyDraftComparison.length > 0) {
        md += generateMarkdownForPartyComparison(report.partyDraftComparison) + '\n---\n\n';
    }

    if (report.substrateArgumentGraph) {
        md += generateMarkdownForArgumentGraph(report.substrateArgumentGraph) + '\n---\n\n';
    }

    if (report.riskImpactAnalysis) {
        md += generateMarkdownForRiskImpactAnalysis(report.riskImpactAnalysis) + '\n---\n\n';
    }
    
    if (report.socialMediaSentiment) {
        md += generateMarkdownForSocialMediaSentiment(report.socialMediaSentiment) + '\n---\n\n';
    }

    if (report.methodology) {
        md += generateMarkdownForMethodology(report.methodology) + '\n---\n\n';
    }
    
    md += `## ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏à‡∏≥‡∏•‡∏≠‡∏á\n\n`;
    md += `### ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô OSINT\n\n${report.simulatedOsintReport}\n\n`;
    md += `### Crawler ‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤\n\n${report.simulatedCrawlerReport}\n\n`;
    

    if (report.sources && report.sources.length > 0) {
        md += `## ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á\n`;
        report.sources.forEach((s, i) => {
            md += `${i + 1}. [${s.title || s.uri}](${s.uri})\n`;
        });
    }

    return md;
}

export const generateHtmlForIntelligenceBriefing = (report: IntelligenceBriefingReport): string => {
    let body = `<h1>‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏£‡∏≠‡∏á: ${report.topic}</h1>`;
    body += `<h2>‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</h2><p>${report.executiveSummary}</p>`;
    body += `<h2>‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏ö‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h2>`;
    body += `<p><strong>‡∏à‡∏∏‡∏î‡∏¢‡∏∑‡∏ô:</strong> ${report.recommendedPositioning.stance}</p>`;
    body += `<h3>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô:</h3><ul>${report.recommendedPositioning.justification.map(j => `<li>${j}</li>`).join('')}</ul>`;
    
    if (report.sources && report.sources.length > 0) {
        body += `<h2>‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</h2><ol>`;
        report.sources.forEach((s, i) => {
            body += `<li id="source-${i+1}"><a href="${s.uri}" target="_blank">${s.title || s.uri}</a></li>`;
        });
        body += `</ol>`;
    }
    
    return `
        <html>
        <head>
            <style>
                body { font-family: 'Kanit', sans-serif; line-height: 1.6; color: #333; max-width: 900px; margin: auto; padding: 20px; }
                h1, h2, h3 { color: #111; font-weight: 600; }
                h1 { font-size: 2.2em; color: #F58220; border-bottom: 2px solid #F58220; padding-bottom: 10px; }
                h2 { font-size: 1.6em; border-bottom: 1px solid #ddd; padding-bottom: 8px; margin-top: 30px; margin-bottom: 20px; }
                h3 { font-size: 1.3em; margin-top: 25px; margin-bottom: 10px; color: #222; }
                blockquote { border-left: 4px solid #ccc; padding-left: 15px; color: #666; font-style: italic; }
                ul, ol { padding-left: 20px; }
                li { margin-bottom: 8px; }
                a { color: #1a0dab; text-decoration: none; }
                a:hover { text-decoration: underline; }
                sup a { text-decoration: none; color: #1a0dab; font-weight: bold; }
            </style>
        </head>
        <body>${body}</body>
        </html>
    `;
};